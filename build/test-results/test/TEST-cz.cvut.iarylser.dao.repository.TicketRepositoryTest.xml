<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="cz.cvut.iarylser.dao.repository.TicketRepositoryTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2024-01-21T12:39:21" hostname="MACHINE" time="0.235">
  <properties/>
  <testcase name="findByIdCustomerFailure()" classname="cz.cvut.iarylser.dao.repository.TicketRepositoryTest" time="0.221"/>
  <testcase name="findByIdCustomerSucceeded()" classname="cz.cvut.iarylser.dao.repository.TicketRepositoryTest" time="0.013"/>
  <system-out><![CDATA[2024-01-21T13:39:19.003+01:00  INFO 21440 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [cz.cvut.iarylser.dao.repository.TicketRepositoryTest]: TicketRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-01-21T13:39:19.018+01:00  INFO 21440 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration cz.cvut.iarylser.Application for test class cz.cvut.iarylser.dao.repository.TicketRepositoryTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.5)

2024-01-21T13:39:19.045+01:00  INFO 21440 --- [    Test worker] c.c.i.d.repository.TicketRepositoryTest  : Starting TicketRepositoryTest using Java 17.0.9 with PID 21440 (started by 1 in D:\Project\eventexplorer)
2024-01-21T13:39:19.046+01:00  INFO 21440 --- [    Test worker] c.c.i.d.repository.TicketRepositoryTest  : No active profile set, falling back to 1 default profile: "default"
2024-01-21T13:39:19.174+01:00  INFO 21440 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-01-21T13:39:19.220+01:00  INFO 21440 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 37 ms. Found 3 JPA repository interfaces.
2024-01-21T13:39:19.275+01:00  INFO 21440 --- [    Test worker] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2024-01-21T13:39:19.342+01:00  INFO 21440 --- [    Test worker] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:ca9cd063-5266-4dd9-a78f-427e30949188;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2024-01-21T13:39:19.634+01:00  INFO 21440 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-01-21T13:39:19.688+01:00  INFO 21440 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.2.13.Final
2024-01-21T13:39:19.691+01:00  INFO 21440 --- [    Test worker] org.hibernate.cfg.Environment            : HHH000406: Using bytecode reflection optimizer
2024-01-21T13:39:19.848+01:00  INFO 21440 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-01-21T13:39:19.903+01:00  WARN 21440 --- [    Test worker] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-01-21T13:39:20.768+01:00  INFO 21440 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: drop table if exists public.event cascade 
Hibernate: drop table if exists public.ticket cascade 
Hibernate: drop table if exists event_likes cascade 
Hibernate: drop table if exists users cascade 
Hibernate: drop sequence if exists event_seq
Hibernate: drop sequence if exists ticket_seq
Hibernate: drop sequence if exists users_seq
Hibernate: create table public.event (age_restriction boolean, capacity integer, sold_tickets integer, ticket_price integer, topic tinyint check (topic between 0 and 8), date_and_time timestamp(6), id_event bigint not null, id_organizer bigint, id_user bigint, description text, location varchar(255), log varbinary(255), organizer varchar(255), title varchar(255), primary key (id_event))
Hibernate: create table public.ticket (ticket_status tinyint check (ticket_status between 0 and 1), event_id bigint, id_customer bigint, id_event bigint, id_organizer bigint, id_ticket bigint not null, id_user bigint, details text, primary key (id_ticket))
Hibernate: create sequence event_seq start with 1 increment by 50
Hibernate: create sequence ticket_seq start with 1 increment by 50
Hibernate: create sequence users_seq start with 1 increment by 50
Hibernate: create table event_likes (id_event bigint not null, id_user bigint not null)
Hibernate: create table users (age integer, id_user bigint not null, description text, email varchar(255), first_name varchar(255), last_name varchar(255), nickname varchar(255) unique, password varchar(255), primary key (id_user))
Hibernate: alter table if exists public.event add constraint FKcam53vvc1ecfyiejtv98f49oe foreign key (id_user) references users
Hibernate: alter table if exists public.ticket add constraint FKh5r4ua2h63akkkiae6evkfr0 foreign key (id_event) references public.event
Hibernate: alter table if exists public.ticket add constraint FKmlniiijfm8ihk6w6dcnog7vrh foreign key (id_user) references users
Hibernate: alter table if exists event_likes add constraint FKrp1c5614p8wmelko5fonis1f4 foreign key (id_user) references users
Hibernate: alter table if exists event_likes add constraint FKqpm9tffl8xuh7wac7s2xj951l foreign key (id_event) references public.event
2024-01-21T13:39:20.823+01:00  INFO 21440 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-01-21T13:39:21.239+01:00  INFO 21440 --- [    Test worker] c.c.i.d.repository.TicketRepositoryTest  : Started TicketRepositoryTest in 2.217 seconds (process running for 8.119)
Hibernate: select t1_0.id_ticket,t1_0.details,e1_0.id_event,e1_0.age_restriction,e1_0.capacity,e1_0.date_and_time,e1_0.description,e1_0.id_organizer,e1_0.location,e1_0.log,e1_0.organizer,e1_0.sold_tickets,e1_0.ticket_price,e1_0.title,e1_0.topic,u1_0.id_user,u1_0.age,u1_0.description,u1_0.email,u1_0.first_name,u1_0.last_name,l1_0.id_user,l1_1.id_event,l1_1.age_restriction,l1_1.capacity,l1_1.date_and_time,l1_1.description,l1_1.id_organizer,l1_1.location,l1_1.log,l1_1.organizer,l1_1.sold_tickets,l1_1.ticket_price,l1_1.title,l1_1.topic,l1_1.id_user,u1_0.nickname,u1_0.password,t1_0.event_id,t1_0.id_customer,t1_0.id_organizer,t1_0.ticket_status,u3_0.id_user,u3_0.age,u3_0.description,u3_0.email,u3_0.first_name,u3_0.last_name,u3_0.nickname,u3_0.password from public.ticket t1_0 left join public.event e1_0 on e1_0.id_event=t1_0.id_event left join users u1_0 on u1_0.id_user=e1_0.id_user left join (event_likes l1_0 join public.event l1_1 on l1_1.id_event=l1_0.id_event) on u1_0.id_user=l1_0.id_user left join users u3_0 on u3_0.id_user=t1_0.id_user where t1_0.id_ticket=?
Hibernate: select next value for ticket_seq
Hibernate: insert into public.ticket (details,id_event,event_id,id_customer,id_organizer,ticket_status,id_user,id_ticket) values (?,?,?,?,?,?,?,?)
Hibernate: select t1_0.id_ticket,t1_0.details,t1_0.id_event,t1_0.event_id,t1_0.id_customer,t1_0.id_organizer,t1_0.ticket_status,t1_0.id_user from public.ticket t1_0 where t1_0.id_customer=?
Hibernate: select t1_0.id_ticket,t1_0.details,e1_0.id_event,e1_0.age_restriction,e1_0.capacity,e1_0.date_and_time,e1_0.description,e1_0.id_organizer,e1_0.location,e1_0.log,e1_0.organizer,e1_0.sold_tickets,e1_0.ticket_price,e1_0.title,e1_0.topic,u1_0.id_user,u1_0.age,u1_0.description,u1_0.email,u1_0.first_name,u1_0.last_name,l1_0.id_user,l1_1.id_event,l1_1.age_restriction,l1_1.capacity,l1_1.date_and_time,l1_1.description,l1_1.id_organizer,l1_1.location,l1_1.log,l1_1.organizer,l1_1.sold_tickets,l1_1.ticket_price,l1_1.title,l1_1.topic,l1_1.id_user,u1_0.nickname,u1_0.password,t1_0.event_id,t1_0.id_customer,t1_0.id_organizer,t1_0.ticket_status,u3_0.id_user,u3_0.age,u3_0.description,u3_0.email,u3_0.first_name,u3_0.last_name,u3_0.nickname,u3_0.password from public.ticket t1_0 left join public.event e1_0 on e1_0.id_event=t1_0.id_event left join users u1_0 on u1_0.id_user=e1_0.id_user left join (event_likes l1_0 join public.event l1_1 on l1_1.id_event=l1_0.id_event) on u1_0.id_user=l1_0.id_user left join users u3_0 on u3_0.id_user=t1_0.id_user where t1_0.id_ticket=?
Hibernate: select next value for ticket_seq
Hibernate: insert into public.ticket (details,id_event,event_id,id_customer,id_organizer,ticket_status,id_user,id_ticket) values (?,?,?,?,?,?,?,?)
Hibernate: select t1_0.id_ticket,t1_0.details,t1_0.id_event,t1_0.event_id,t1_0.id_customer,t1_0.id_organizer,t1_0.ticket_status,t1_0.id_user from public.ticket t1_0 where t1_0.id_customer=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
