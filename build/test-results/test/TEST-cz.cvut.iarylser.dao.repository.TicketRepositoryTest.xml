<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="cz.cvut.iarylser.dao.repository.TicketRepositoryTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2024-07-07T14:46:58" hostname="MACHINE" time="0.04">
  <properties/>
  <testcase name="findByIdCustomerFailure()" classname="cz.cvut.iarylser.dao.repository.TicketRepositoryTest" time="0.025"/>
  <testcase name="findByIdCustomerSucceeded()" classname="cz.cvut.iarylser.dao.repository.TicketRepositoryTest" time="0.013"/>
  <system-out><![CDATA[2024-07-07T16:46:58.620+02:00  INFO 16176 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [cz.cvut.iarylser.dao.repository.TicketRepositoryTest]: TicketRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-07T16:46:58.627+02:00  INFO 16176 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration cz.cvut.iarylser.Application for test class cz.cvut.iarylser.dao.repository.TicketRepositoryTest
Hibernate: select t1_0.id_ticket,t1_0.details,e1_0.id_event,e1_0.age_restriction,e1_0.capacity,e1_0.date_and_time,e1_0.description,e1_0.id_organizer,e1_0.location,e1_0.log,e1_0.organizer,e1_0.sold_tickets,e1_0.ticket_price,e1_0.title,e1_0.topic,u1_0.id_user,u1_0.age,u1_0.description,u1_0.email,u1_0.first_name,u1_0.last_name,l1_0.id_user,l1_1.id_event,l1_1.age_restriction,l1_1.capacity,l1_1.date_and_time,l1_1.description,l1_1.id_organizer,l1_1.location,l1_1.log,l1_1.organizer,l1_1.sold_tickets,l1_1.ticket_price,l1_1.title,l1_1.topic,l1_1.id_user,u1_0.nickname,u1_0.password,t1_0.event_id,t1_0.id_customer,t1_0.id_organizer,t1_0.ticket_status,u3_0.id_user,u3_0.age,u3_0.description,u3_0.email,u3_0.first_name,u3_0.last_name,u3_0.nickname,u3_0.password from public.ticket t1_0 left join public.event e1_0 on e1_0.id_event=t1_0.id_event left join users u1_0 on u1_0.id_user=e1_0.id_user left join (event_likes l1_0 join public.event l1_1 on l1_1.id_event=l1_0.id_event) on u1_0.id_user=l1_0.id_user left join users u3_0 on u3_0.id_user=t1_0.id_user where t1_0.id_ticket=?
Hibernate: select next value for ticket_seq
Hibernate: insert into public.ticket (details,id_event,event_id,id_customer,id_organizer,ticket_status,id_user,id_ticket) values (?,?,?,?,?,?,?,?)
Hibernate: select t1_0.id_ticket,t1_0.details,t1_0.id_event,t1_0.event_id,t1_0.id_customer,t1_0.id_organizer,t1_0.ticket_status,t1_0.id_user from public.ticket t1_0 where t1_0.id_customer=?
Hibernate: select t1_0.id_ticket,t1_0.details,e1_0.id_event,e1_0.age_restriction,e1_0.capacity,e1_0.date_and_time,e1_0.description,e1_0.id_organizer,e1_0.location,e1_0.log,e1_0.organizer,e1_0.sold_tickets,e1_0.ticket_price,e1_0.title,e1_0.topic,u1_0.id_user,u1_0.age,u1_0.description,u1_0.email,u1_0.first_name,u1_0.last_name,l1_0.id_user,l1_1.id_event,l1_1.age_restriction,l1_1.capacity,l1_1.date_and_time,l1_1.description,l1_1.id_organizer,l1_1.location,l1_1.log,l1_1.organizer,l1_1.sold_tickets,l1_1.ticket_price,l1_1.title,l1_1.topic,l1_1.id_user,u1_0.nickname,u1_0.password,t1_0.event_id,t1_0.id_customer,t1_0.id_organizer,t1_0.ticket_status,u3_0.id_user,u3_0.age,u3_0.description,u3_0.email,u3_0.first_name,u3_0.last_name,u3_0.nickname,u3_0.password from public.ticket t1_0 left join public.event e1_0 on e1_0.id_event=t1_0.id_event left join users u1_0 on u1_0.id_user=e1_0.id_user left join (event_likes l1_0 join public.event l1_1 on l1_1.id_event=l1_0.id_event) on u1_0.id_user=l1_0.id_user left join users u3_0 on u3_0.id_user=t1_0.id_user where t1_0.id_ticket=?
Hibernate: select next value for ticket_seq
Hibernate: insert into public.ticket (details,id_event,event_id,id_customer,id_organizer,ticket_status,id_user,id_ticket) values (?,?,?,?,?,?,?,?)
Hibernate: select t1_0.id_ticket,t1_0.details,t1_0.id_event,t1_0.event_id,t1_0.id_customer,t1_0.id_organizer,t1_0.ticket_status,t1_0.id_user from public.ticket t1_0 where t1_0.id_customer=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
