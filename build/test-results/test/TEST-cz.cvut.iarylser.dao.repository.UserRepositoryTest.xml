<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="cz.cvut.iarylser.dao.repository.UserRepositoryTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2024-07-07T14:20:44" hostname="MACHINE" time="0.039">
  <properties/>
  <testcase name="findByNicknameSucceeded()" classname="cz.cvut.iarylser.dao.repository.UserRepositoryTest" time="0.02"/>
  <testcase name="findByNicknameFailure()" classname="cz.cvut.iarylser.dao.repository.UserRepositoryTest" time="0.017"/>
  <system-out><![CDATA[2024-07-07T16:20:44.916+02:00  INFO 19352 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [cz.cvut.iarylser.dao.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-07T16:20:44.923+02:00  INFO 19352 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration cz.cvut.iarylser.Application for test class cz.cvut.iarylser.dao.repository.UserRepositoryTest
Hibernate: select u1_0.id_user,u1_0.age,u1_0.description,u1_0.email,u1_0.first_name,u1_0.last_name,l1_0.id_user,l1_1.id_event,l1_1.age_restriction,l1_1.capacity,l1_1.date_and_time,l1_1.description,l1_1.id_organizer,l1_1.location,l1_1.log,l1_1.organizer,l1_1.sold_tickets,l1_1.ticket_price,l1_1.title,l1_1.topic,u2_0.id_user,u2_0.age,u2_0.description,u2_0.email,u2_0.first_name,u2_0.last_name,u2_0.nickname,u2_0.password,u1_0.nickname,u1_0.password from users u1_0 left join (event_likes l1_0 join public.event l1_1 on l1_1.id_event=l1_0.id_event) on u1_0.id_user=l1_0.id_user left join users u2_0 on u2_0.id_user=l1_1.id_user where u1_0.id_user=?
Hibernate: insert into users (age,description,email,first_name,last_name,nickname,password,id_user) values (?,?,?,?,?,?,?,?)
Hibernate: select u1_0.id_user,u1_0.age,u1_0.description,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.nickname,u1_0.password from users u1_0 where u1_0.nickname=?
Hibernate: select u1_0.id_user,u1_0.age,u1_0.description,u1_0.email,u1_0.first_name,u1_0.last_name,l1_0.id_user,l1_1.id_event,l1_1.age_restriction,l1_1.capacity,l1_1.date_and_time,l1_1.description,l1_1.id_organizer,l1_1.location,l1_1.log,l1_1.organizer,l1_1.sold_tickets,l1_1.ticket_price,l1_1.title,l1_1.topic,u2_0.id_user,u2_0.age,u2_0.description,u2_0.email,u2_0.first_name,u2_0.last_name,u2_0.nickname,u2_0.password,u1_0.nickname,u1_0.password from users u1_0 left join (event_likes l1_0 join public.event l1_1 on l1_1.id_event=l1_0.id_event) on u1_0.id_user=l1_0.id_user left join users u2_0 on u2_0.id_user=l1_1.id_user where u1_0.id_user=?
Hibernate: insert into users (age,description,email,first_name,last_name,nickname,password,id_user) values (?,?,?,?,?,?,?,?)
Hibernate: select u1_0.id_user,u1_0.age,u1_0.description,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.nickname,u1_0.password from users u1_0 where u1_0.nickname=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
